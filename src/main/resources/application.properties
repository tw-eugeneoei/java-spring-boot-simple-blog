spring.datasource.url = jdbc:mysql://localhost:3306/spring_boot_simple_blog?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
# spring.datasource.url = jdbc:mysql://localhost:3306/spring_boot_simple_blog
spring.datasource.username = ${MY_SQL_DB_USERNAME}
spring.datasource.password = ${MY_SQL_DB_PASSWORD}
# spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# hibernate properties
# dialect makes Hibernate generate better SQL for the chosen database
# spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQLInnoDBDialect
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL8Dialect
#spring.jpa.properties.hibernate.dialect.storage_engine=innodb

#spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration

# Hibernate ddl auto (create, create-drop, validate, update)
# create the tables if not exists and if tables exists in DB then alter the table if there are any change in the entity mapping
spring.jpa.hibernate.ddl-auto = update

# default userid is "user". default password is printed in the server startup log
# spring security is by default turned on for all urls in the application therefore need to whitelist urls in application
logging.level.org.springframework.security = DEBUG

# overwrite default springframework security setting
spring.security.user.name=admin
spring.security.user.password=admin
spring.security.user.roles=admin
